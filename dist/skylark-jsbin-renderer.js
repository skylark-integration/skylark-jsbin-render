/**
 * skylark-jsbin-renderer - A version of jsbin-renderer  that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsbin-renderer/
 * @license MIT
 */
!function(r,e){var n=e.define,require=e.require,o="function"==typeof n&&n.amd,t=!o&&"undefined"!=typeof exports;if(!o&&!n){var i={};n=e.define=function(r,e,n){"function"==typeof n?(i[r]={factory:n,deps:e.map(function(e){return function(r,e){if("."!==r[0])return r;var n=e.split("/"),o=r.split("/");n.pop();for(var t=0;t<o.length;t++)"."!=o[t]&&(".."==o[t]?n.pop():n.push(o[t]));return n.join("/")}(e,r)}),resolved:!1,exports:null},require(r)):i[r]={factory:null,resolved:!0,exports:n}},require=e.require=function(r){if(!i.hasOwnProperty(r))throw new Error("Module "+r+" has not been defined");var module=i[r];if(!module.resolved){var n=[];module.deps.forEach(function(r){n.push(require(r))}),module.exports=module.factory.apply(e,n)||null,module.resolved=!0}return module.exports}}if(!n)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(r,require){r("skylark-jsbin-renderer/jsbin",["skylark-langx-ns"],function(r){return r.attach("intg.jsbin")}),r("skylark-jsbin-renderer/renderer",["skylark-langx-async/Deferred","skylark-jquery","./jsbin"],function(r,e,n){"use strict";var o={},t=(e(window),e(document));return o.runner={},o.runner.origin="*",o.setup=function(r){o.runner.window=r.contentWindow,o.runner.iframe=r},o.error=function(){window.console.warn.apply(console,["Renderer:"].concat([].slice.call(arguments)))},o.handleMessage=function(r){if(r.origin){var e=r.data;if("string"==typeof e){try{e="string"==typeof r.data?JSON.parse(r.data):r.data}catch(r){return o.error("Error parsing event data:",r.message)}if("function"!=typeof o[e.type])return!1;try{o[e.type](e.data)}catch(r){o.error(r.message)}}}},o.postMessage=function(r,e){if(!o.runner.window)return o.error("postMessage: No connection to runner window.");o.runner.window.postMessage(JSON.stringify({type:r,data:e}),o.runner.origin)},o.complete=function(){try{store.sessionStorage.removeItem("runnerPending")}catch(r){}},o.loopProtectHit=function(r){var e=n.panels.named.javascript.editor;setTimeout(function(){var n=e.state.lint.annotations||[];void 0!==e.updateLinting&&((n=n.filter(function(e){return e.source!=="loopProtectLine:"+r})).push({from:CodeMirror.Pos(r-1,0),to:CodeMirror.Pos(r-1,0),message:'Exiting potential infinite loop.\nTo disable loop protection: add "// noprotect" to your code',severity:"warning",source:"loopProtectLine:"+r}),e.updateLinting(n))},e.state.lint.options.delay||0)},o.focus=function(){n.panels.focus(n.panels.named.live),closedropdown()},o.console=function(r){var e=r.method,n=r.args;window._console&&(window._console[e]||(e="log"),window._console[e].apply(window._console,n))},o["console:load:script:success"]=function(r){t.trigger("console:load:script:success",r)},o["console:load:script:error"]=function(r){t.trigger("console:load:script:error",r)},o["console:load:dom:success"]=function(r){t.trigger("console:load:dom:success",r)},o["console:load:dom:error"]=function(r){t.trigger("console:load:dom:error",r)},n.renderer=o}),r("skylark-jsbin-renderer/main",["./renderer"],function(r){return r}),r("skylark-jsbin-renderer",["skylark-jsbin-renderer/main"],function(r){return r})}(n),!o){var s=require("skylark-langx-ns");t?module.exports=s:e.skylarkjs=s}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-jsbin-renderer.js.map
