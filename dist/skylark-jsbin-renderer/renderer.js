/**
 * skylark-jsbin-renderer - A version of jsbin-renderer  that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsbin-renderer/
 * @license MIT
 */
define(["skylark-langx-async/Deferred","skylark-jquery","./jsbin"],function(o,n,e){"use strict";var r={},t=(n(window),n(document));return r.runner={},r.runner.origin="*",r.setup=function(o){r.runner.window=o.contentWindow,r.runner.iframe=o},r.error=function(){window.console.warn.apply(console,["Renderer:"].concat([].slice.call(arguments)))},r.handleMessage=function(o){if(o.origin){var n=o.data;if("string"==typeof n){try{n="string"==typeof o.data?JSON.parse(o.data):o.data}catch(o){return r.error("Error parsing event data:",o.message)}if("function"!=typeof r[n.type])return!1;try{r[n.type](n.data)}catch(o){r.error(o.message)}}}},r.postMessage=function(o,n){if(!r.runner.window)return r.error("postMessage: No connection to runner window.");r.runner.window.postMessage(JSON.stringify({type:o,data:n}),r.runner.origin)},r.complete=function(){try{store.sessionStorage.removeItem("runnerPending")}catch(o){}},r.loopProtectHit=function(o){var n=e.panels.named.javascript.editor;setTimeout(function(){var e=n.state.lint.annotations||[];void 0!==n.updateLinting&&((e=e.filter(function(n){return n.source!=="loopProtectLine:"+o})).push({from:CodeMirror.Pos(o-1,0),to:CodeMirror.Pos(o-1,0),message:'Exiting potential infinite loop.\nTo disable loop protection: add "// noprotect" to your code',severity:"warning",source:"loopProtectLine:"+o}),n.updateLinting(e))},n.state.lint.options.delay||0)},r.focus=function(){e.panels.focus(e.panels.named.live),closedropdown()},r.console=function(o){var n=o.method,e=o.args;window._console&&(window._console[n]||(n="log"),window._console[n].apply(window._console,e))},r["console:load:script:success"]=function(o){t.trigger("console:load:script:success",o)},r["console:load:script:error"]=function(o){t.trigger("console:load:script:error",o)},r["console:load:dom:success"]=function(o){t.trigger("console:load:dom:success",o)},r["console:load:dom:error"]=function(o){t.trigger("console:load:dom:error",o)},e.renderer=r});
//# sourceMappingURL=sourcemaps/renderer.js.map
